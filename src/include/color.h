
#ifndef _COLOR_H_
#define _COLOR_H_

#include <stdbool.h>
#include "string.h"

typedef enum text_color {
    TEXT_COLOR_FOREGROUND_BLACK,
    TEXT_COLOR_FOREGROUND_RED,
    TEXT_COLOR_FOREGROUND_GREEN,
    TEXT_COLOR_FOREGROUND_YELLOW,
    TEXT_COLOR_FOREGROUND_BLUE,
    TEXT_COLOR_FOREGROUND_MAGENTA,
    TEXT_COLOR_FOREGROUND_CYAN,
    TEXT_COLOR_FOREGROUND_WHITE,
    TEXT_COLOR_FOREGROUND_LIGHT_BLACK,
    TEXT_COLOR_FOREGROUND_LIGHT_RED,
    TEXT_COLOR_FOREGROUND_LIGHT_GREEN,
    TEXT_COLOR_FOREGROUND_LIGHT_YELLOW,
    TEXT_COLOR_FOREGROUND_LIGHT_BLUE,
    TEXT_COLOR_FOREGROUND_LIGHT_MAGENTA,
    TEXT_COLOR_FOREGROUND_LIGHT_CYAN,
    TEXT_COLOR_FOREGROUND_LIGHT_WHITE,

    TEXT_COLOR_BACKGROUND_BLACK,
    TEXT_COLOR_BACKGROUND_RED,
    TEXT_COLOR_BACKGROUND_GREEN,
    TEXT_COLOR_BACKGROUND_YELLOW,
    TEXT_COLOR_BACKGROUND_BLUE,
    TEXT_COLOR_BACKGROUND_MAGENTA,
    TEXT_COLOR_BACKGROUND_CYAN,
    TEXT_COLOR_BACKGROUND_WHITE,
    TEXT_COLOR_BACKGROUND_LIGHT_BLACK,
    TEXT_COLOR_BACKGROUND_LIGHT_RED,
    TEXT_COLOR_BACKGROUND_LIGHT_GREEN,
    TEXT_COLOR_BACKGROUND_LIGHT_YELLOW,
    TEXT_COLOR_BACKGROUND_LIGHT_BLUE,
    TEXT_COLOR_BACKGROUND_LIGHT_MAGENTA,
    TEXT_COLOR_BACKGROUND_LIGHT_CYAN,
    TEXT_COLOR_BACKGROUND_LIGHT_WHITE,


    TEXT_COLOR_RESET,
    TEXT_COLOR_BOLD,
    TEXT_COLOR_ITALIC,
    TEXT_COLOR_UNDERLINE,
} text_color_t;

string_t* color_to_string(text_color_t color);
string_t* format_color(string_t* string, text_color_t color);
bool is_foreground(text_color_t color);
unsigned short code_for_color(text_color_t color);

#endif
